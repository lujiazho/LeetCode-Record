###############################################################################################
# 典型双指针，类似快排的双指针
###########
# 时间复杂度：O(n)
# 空间复杂度：O(1)，没有额外开销
###############################################################################################
class Solution:
    def reverseOnlyLetters(self, s: str) -> str:
        s = list(s)
        l, r = -1, len(s)
        while l < r:
            l += 1
            while l < len(s) and not s[l].isalpha(): # 这里和快排的双指针唯一不同的就是这个判断句
                l += 1
            r -= 1
            while r > -1 and not s[r].isalpha():
                r -= 1
            if l < r:
                s[l], s[r] = s[r], s[l]
        return ''.join(s)